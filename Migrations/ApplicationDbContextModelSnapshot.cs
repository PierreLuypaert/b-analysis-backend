// <auto-generated />
using System;
using B_Analysis_BackEnd.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace B_Analysis_BackEnd.Migrations
{
    [DbContext(typeof(BAnalysisContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("B_Analysis_BackEnd.Models.Match", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("BallPositionSerialized")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BallSpeedSerialized")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PredictedGoalsSerialized")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("BlueAttackerId")
                        .HasColumnType("bigint");

                    b.Property<long>("BlueDefenderId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MatchDuration")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("RedAttackerId")
                        .HasColumnType("bigint");

                    b.Property<long>("RedDefenderId")
                        .HasColumnType("bigint");

                    b.Property<string>("VideoUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("scoreBlue")
                        .HasColumnType("integer");

                    b.Property<int>("scoreRed")
                        .HasColumnType("integer");

                    b.Property<int>("FrameRate")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BlueAttackerId");

                    b.HasIndex("BlueDefenderId");

                    b.HasIndex("RedAttackerId");

                    b.HasIndex("RedDefenderId");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("B_Analysis_BackEnd.Models.Player", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("GoalsCount")
                        .HasColumnType("integer");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("MatchLastDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SavesCount")
                        .HasColumnType("integer");

                    b.Property<int>("ShootMaxSpeed")
                        .HasColumnType("integer");

                    b.Property<int>("ShootsCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("B_Analysis_BackEnd.Models.Match", b =>
                {
                    b.HasOne("B_Analysis_BackEnd.Models.Player", "BlueAttacker")
                        .WithMany()
                        .HasForeignKey("BlueAttackerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("B_Analysis_BackEnd.Models.Player", "BlueDefender")
                        .WithMany()
                        .HasForeignKey("BlueDefenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("B_Analysis_BackEnd.Models.Player", "RedAttacker")
                        .WithMany()
                        .HasForeignKey("RedAttackerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("B_Analysis_BackEnd.Models.Player", "RedDefender")
                        .WithMany()
                        .HasForeignKey("RedDefenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BlueAttacker");

                    b.Navigation("BlueDefender");

                    b.Navigation("RedAttacker");

                    b.Navigation("RedDefender");
                });
#pragma warning restore 612, 618
        }
    }
}
